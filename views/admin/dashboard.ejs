<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment"></script>
    <link rel="stylesheet" href="/css/adminDashboard.css">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
          <a class="navbar-brand" href="/admin">
            <img src="/test.jpg" alt="" width="30" height="24" class="d-inline-block align-text-top">
            SportZilon
          </a>
          <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown"
                  aria-expanded="false">
                  ADMIN
                </a>
                <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                  <li><a class="dropdown-item" href="#">Action</a></li>
                  <li>
                    <hr class="dropdown-divider">
                  </li>
                  <li><a class="dropdown-item" href="/admin/logout">Logout</a></li>
                </ul>
              </li>
            </ul>
          </div>
        </div>
      </nav> 
      <main class="main">
        <aside class="sidebar">
          <div class="">
            <div class="list-group sidebar-list" id="myListGroup">
              <a href="/admin">
                <button type="button" class="list-group-item list-group-item-action">HOME </button>
              </a>
              <a href="/admin/allproducts">
                <button type="button" class="list-group-item list-group-item-action">ALL PRODUCTS</button>
              </a>
              <a href="/admin/ordersList">
                <button type="button" class="list-group-item list-group-item-action">ORDERS LIST</button>
              </a>
              <a href="/admin/usersList">
                <button type="button" class="list-group-item list-group-item-action">USERS LIST</button>
              </a>
              <a href="/admin/categoryList">
                <button type="button" class="list-group-item list-group-item-action">CATEGORY LIST</button>
              </a>
              <a href="/admin/couponList">
                <button type="button" class="list-group-item list-group-item-action">COUPON LIST</button>
              </a>
              <a href="/admin/offers">
                <button type="button" class="list-group-item list-group-item-action">OFFERS</button>
              </a>
            </div>
          </div>
        </aside>
        <section class="content">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">HOME</li>
                </ol>
            </nav>
            <div class="dashboard">
                <div class="chart-container">
                    <h2>Sales Chart</h2>
                    <select id="chartFilter">
                        <option value="yearly">Yearly</option>
                        <option value="monthly">Monthly</option>
                        <option value="weekly">Weekly</option>
                    </select>
                    <canvas id="salesChart"></canvas>
                </div>
                
                <div class="top-lists">
                    <div class="top-list">
                        <h2>Best Selling Products (Top 10)</h2>
                        <ul id="bestProducts"></ul>
                    </div>
                    <div class="top-list">
                        <h2>Best Selling Categories (Top 10)</h2>
                        <ul id="bestCategories"></ul>
                    </div>
                </div>
                
            </div>
            <div class="recent-orders">
                <h2>Recent Orders</h2>
                <ul id="recentOrders"></ul>
            </div>
            <!-- Sales Report Form -->
            <div class="sales-report">
                <h2>Sales Report</h2>
                <form id="salesReportForm">
                    <label for="reportType">Report Type:</label>
                    <select id="reportType" name="reportType">
                        <option value="daily">Daily</option>
                        <option value="weekly">Weekly</option>
                        <option value="yearly">Yearly</option>
                        <option value="custom">Custom Date Range</option>
                    </select>

                    <div id="customDateRange" style="display: none;">
                        <label for="startDate">Start Date:</label>
                        <input type="date" id="startDate" name="startDate">

                        <label for="endDate">End Date:</label>
                        <input type="date" id="endDate" name="endDate">
                    </div>
                    <button type="button" id="generateReportBtn" class="btn btn-primary btn-sm mt-2">Generate Sales Report</button>   
                </form>
                <div id="reportContainer" class="mt-4"></div>
                <button type="button" id="downloadPdfBtn" class="btn btn-secondary btn-sm mt-2">Download PDF</button>
                <button type="button" id="downloadExcelBtn" class="btn btn-secondary btn-sm mt-2">Download Excel</button>
            </div>
        </section>
    </main>

    <footer class="footer">
        <div class="container">
            <p class="copyright">Â© 2024 ShoesZone.</p>
        </div>
    </footer>
    <!-- Bootstrap JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
    <script>
        const listGroup = document.getElementById('myListGroup');
        const buttons = listGroup.getElementsByClassName('list-group-item');

        for (const button of buttons) {
            button.addEventListener('click', function () {
                for (const btn of buttons) {
                    btn.classList.remove('active');
                }
                this.classList.add('active');
            });
        }
    </script>
    <script>
        (function () {
            window.onpageshow = function (event) {
                if (event.persisted || (window.performance && window.performance.navigation.type === 2)) {
                    window.location.reload();
                }
            };
        })();
    </script>
    <script>
        const reportTypeSelect = document.getElementById('reportType');
        const customDateRange = document.getElementById('customDateRange');

        // Show/hide custom date range inputs
        reportTypeSelect.addEventListener('change', () => {
            if (reportTypeSelect.value === 'custom') {
                customDateRange.style.display = 'block';
            } else {
                customDateRange.style.display = 'none';
            }
        });

        const generateReportBtn = document.getElementById('generateReportBtn');
        const reportContainer = document.getElementById('reportContainer');
        const startDateInput = document.getElementById('startDate');
        const endDateInput = document.getElementById('endDate');

        generateReportBtn.addEventListener('click', () => {
            const reportType = document.getElementById('reportType').value;
            const startDate = startDateInput.value;
            const endDate = endDateInput.value;

            let url = `/admin/sales-report?type=${reportType}`;

            if (reportType === 'custom' && startDate && endDate) {
                url += `&startDate=${startDate}&endDate=${endDate}`;
            }

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    reportContainer.innerHTML = '';

                    const table = document.createElement('table');
                    table.classList.add('table', 'table-striped');

                    const thead = document.createElement('thead');
                    const headerRow = document.createElement('tr');
                    const headers = ['Date', 'Total Sales', 'Orders Count', 'Total Discounts', 'Coupon Deductions'];
                    headers.forEach(header => {
                        const th = document.createElement('th');
                        th.textContent = header;
                        headerRow.appendChild(th);
                    });
                    thead.appendChild(headerRow);
                    table.appendChild(thead);

                    const tbody = document.createElement('tbody');
                    data.forEach(report => {
                        const row = document.createElement('tr');
                        const dateCell = document.createElement('td');
                        dateCell.textContent = report.date;
                        row.appendChild(dateCell);

                        const totalSalesCell = document.createElement('td');
                        totalSalesCell.textContent = report.totalSales;
                        row.appendChild(totalSalesCell);

                        const ordersCountCell = document.createElement('td');
                        ordersCountCell.textContent = report.ordersCount;
                        row.appendChild(ordersCountCell);

                        const totalDiscountsCell = document.createElement('td');
                        totalDiscountsCell.textContent = report.totalDiscounts;
                        row.appendChild(totalDiscountsCell);

                        const couponDeductionsCell = document.createElement('td');
                        couponDeductionsCell.textContent = report.couponDeductions;
                        row.appendChild(couponDeductionsCell);

                        tbody.appendChild(row);
                    });
                    table.appendChild(tbody);

                    reportContainer.appendChild(table);
                })
                .catch(error => {
                    console.error('Error fetching sales report:', error);
                });
        });

        const downloadPdfBtn = document.getElementById('downloadPdfBtn');
        const downloadExcelBtn = document.getElementById('downloadExcelBtn');

        downloadPdfBtn.addEventListener('click', () => {
            const reportType = document.getElementById('reportType').value;
            const startDate = startDateInput.value;
            const endDate = endDateInput.value;

            let url = `/admin/sales-report/download?format=pdf&type=${reportType}`;

            if (reportType === 'custom' && startDate && endDate) {
                url += `&startDate=${startDate}&endDate=${endDate}`;
            }

            window.location.href = url;
        });

        downloadExcelBtn.addEventListener('click', () => {
            const reportType = document.getElementById('reportType').value;
            const startDate = startDateInput.value;
            const endDate = endDateInput.value;

            let url = `/admin/sales-report/download?format=excel&type=${reportType}`;

            if (reportType === 'custom' && startDate && endDate) {
                url += `&startDate=${startDate}&endDate=${endDate}`;
            }

            window.location.href = url;
        });
    </script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const chartFilter = document.getElementById('chartFilter');
        const salesChartCanvas = document.getElementById('salesChart').getContext('2d');
        let salesChart;
    
        // Function to update the dashboard
        function updateDashboard(filter = 'yearly') {
            fetch(`/admin/dashboard?filter=${filter}`)
                .then(response => response.json())
                .then(data => {
                    console.log('Received data:', data.chartData);
                    updateChart(data.chartData);
                    updateTopLists(data.topProducts, data.topCategories);
                    updateRecentOrders(data.recentOrders);
                })
                .catch(error => console.error('Error:', error));
        }
    
        // Function to update the Chart.js chart
        function updateChart(chartData) {
            if (salesChart) {
                salesChart.destroy();
            }

            const filter = chartFilter.value;
            
            salesChart = new Chart(salesChartCanvas, {
                type: 'bar',  // Changed from 'line' to 'bar'
                data: {
                    labels: chartData.labels,
                    datasets: [{
                        label: 'Total Sales',
                        data: chartData.datasets[0].data,
                        backgroundColor: 'rgba(75, 192, 192, 0.6)',  // Added for bar color
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1  // Added for bar border
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                parser: filter === 'yearly' ? 'YYYY' : (filter === 'monthly' ? 'YYYY-MM' : 'YYYY-[W]WW'),
                                unit: filter === 'yearly' ? 'year' : (filter === 'monthly' ? 'month' : 'week'),
                                displayFormats: {
                                    year: 'YYYY',
                                    month: 'MMM YYYY',
                                    week: 'wo YYYY'
                                }
                            },
                            title: {
                                display: true,
                                text: 'Date'
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Total Sales'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false  // Hide legend if not needed
                        }
                    }
                }
            });
        }
        // Function to update top lists
        function updateTopLists(topProducts, topCategories) {
            const bestProductsList = document.getElementById('bestProducts');
            const bestCategoriesList = document.getElementById('bestCategories');
    
            console.log(topCategories,topProducts)
            bestProductsList.innerHTML = topProducts.map(product => `
                <li>${product.name} - ${product.sales}</li>
            `).join('');
    
            bestCategoriesList.innerHTML = topCategories.map(category => `
                <li>${category.name} - ${category.sales}</li>
            `).join('');
        }
    
        // Function to update recent orders
        function updateRecentOrders(orders) {
            const recentOrdersList = document.getElementById('recentOrders');
            recentOrdersList.innerHTML = orders.map(order => `
                <li>
                    Order #${order._id.slice(-6)} - ${new Date(order.createdAt).toLocaleDateString()}
                    <br>Total: $${order.totalCost.toFixed(2)}
                    <br>Statuses:
                    <ul>
                        ${order.itemStatuses.map(item => `
                            <li>${item.productName}: ${item.status}</li>
                        `).join('')}
                    </ul>
                </li>
            `).join('');
        }
    
        // Event listener for chart filter change
        chartFilter.addEventListener('change', function () {
            const filter = chartFilter.value;
            console.log("filter:",filter)
            updateDashboard(filter);
        });
    
        // Initial dashboard update
        updateDashboard();
    });
    </script>
    </body>
</html>
