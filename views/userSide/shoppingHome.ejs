<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>userhome</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
     <link rel="stylesheet" href="/css/shoppingHome.css">
  </head>
<body>
  <header>
    <nav class="navbar">
      <div class="brand-logo">
        <a class="navbar-brand" href="/">
          <img src="/images/test.jpg" alt="Brand Logo" width="50" height="50" class="img-fluid d-inline-block align-text-top">
          <span class="d-inline-block">ShoeZone</span>
        </a>
      </div>
      <div class="search-bar">
        <form action="/search" method="GET">
          <div class="input-group">
            <input type="text" name="query" class="form-control" placeholder="Search for products...">
            <button type="submit" class="input-group-text search-btn">
                <i class="fas fa-search"></i>
            </button>
        </div>
        <div class="dropdown">
          <button class="dropdown-toggle btn dropdown-toggle-split" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            <span class="dropdown-toggle-text">All categories</span>
            <span class="visually-hidden">Toggle Dropdown</span>
          </button>
          <% if (categoryList) { %>
            <ul class="dropdown-menu" aria-labelledby="categoryDropdown">
              <li><a class="dropdown-item" href="#" onclick="setCategory('all')">All</a></li>
              <% categoryList.forEach(category => { %>
                <li><a class="dropdown-item" href="#" onclick="setCategory('<%= category.categoryName %>')"><%= category.categoryName %></a></li>
              <% }) %>
            </ul>
          <% } %>
          <input type="hidden" name="category" id="selectedCategory" value="all">
        </div>
        </form>
      </div>
      
      <div class="user-actions">
        <div class="profile-dropdown">
          <a class="profile-dropdown-toggle btn " href="#" role="button" id="profileDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fas fa-user"></i>
          </a>
            <div class="profile-dropdown-menu" >
              <a class="dropdown-item" href="/profile">Profile</a>
              <a class="dropdown-item" href="/logout">Logout</a>
            </div>
        </div>
        <a href="/cart">
          <i class="fas fa-shopping-cart"></i>
      </a>
      <a href="/wishlist">
        <i class="fas fa-heart"></i>
    </a>
    </div>
    
    </nav>
    <div class="banner">
      <div class="row pt-2 pb-2">
        <div class="col">
          <a href="/">HOME</a>
        </div>
        <% categoryList.forEach(category => { %>
          <div class="col">
            <a href="/<%= category.categoryName %>" class="category-link" id="category-<%= category.categoryName %>" onclick="setCategory('<%= category.categoryName %>')"><%= category.categoryName %></a>
          </div>
      <% }) %>
        <div class="col sort">
          <form id="sortForm" action="" method="GET">
            <select name="sortBy" id="sortBy">
                <option value="">Sort</option>
                <option value="popularity">Popularity</option>
                <option value="priceLowToHigh">Price: Low to High</option>
                <option value="priceHighToLow">Price: High to Low</option>
                <option value="newArrival">New Arrivals</option>
                <option value="aToZ">A - Z</option>
                <option value="zToA">Z - A</option>
                <option value="ratingLowToHigh">Rating: Low To High</option>
                <option value="ratingHighToLow">Rating: High To Low</option>
            </select>
        </form>
        </div>
      </div>
    </div>
 
  </header>
  <section class="product-section">
    
    <div class="container">
        <div class="row">
            <% if (products && products.length > 0) { %>
              <div id="productData" data-products="<%= JSON.stringify(productsToSort) %>"   data-current-page="<%= currentPage %>" data-products-per-page="<%= productsPerPage %>" data-total-products="<%= totalProducts %>" hidden></div>
              <div id="wishlistData" data-wishlist-products="<%= JSON.stringify(wishlistProducts) %>" hidden></div>
              <% products.forEach(product => { %>
                    <div class="col-lg-3 col-md-6 col-sm-12">
                        <div class="product-card <%= product.stock === 0 ? 'out-of-stock' : '' %>" data-product="<%= product._id %>">
                            <div class="product-image">
                              <a href="/product-details/<%= product._id %>">
                                <img src="/uploads/<%= product.photos[0].filename %>" alt="Product Image">
                              </a>
                                <div class="product-wishlist">
                                  <a href="#" class="move-to-wishlist">
                                    <% const isInWishlist = wishlistProducts.find(item => item._id.toString() === product._id.toString()); %>
                                    <% if (isInWishlist) { %>
                                        <i class="fa fa-heart" style="color: black;"></i>
                                    <% } else { %>
                                        <i class="fa fa-heart" style="color:rgb(221, 218, 218);"></i>
                                    <% } %>
                                </a>
                                </div>
                                <% if (product.stock === 0) { %>
                                  <div class="out-of-stock-message">Out of Stock</div>
                                <% } %>
                            </div>
                            <div class="product-details">
                                <h3 class="product-name"><%= product.name %></h3>
                                <div class="rating">
                                  <% for (let i = 1; i <= 5; i++) { %>
                                    <% if (i <= product.averageRating) { %>
                                      <i class="fas fa-star"></i>
                                    <% } else { %>
                                      <i class="far fa-star"></i>
                                    <% } %>
                                  <% } %>
                                </div>
                                <div class="product-price">
                                  <% if (product.offer && product.price !== product.currentPrice) { %>
                                    <p class="price">
                                      <span class="price" style="text-decoration: line-through;">₹<%= product.price.toFixed(2) %></span>
                                      <span class="current-price">₹<%= product.currentPrice.toFixed(2) %></span>
                                      <i class="fas fa-info-circle offer-icon" data-bs-toggle="modal" data-bs-target="#offerModal"></i>
                                    </p>
                                     <!-- Modal -->
                                <div class="modal fade" id="offerModal" tabindex="-1" aria-labelledby="offerModalLabel" aria-hidden="true">
                                  <div class="modal-dialog">
                                    <div class="modal-content">
                                      <div class="modal-header">
                                        <h5 class="modal-title" id="offerModalLabel">Offer Details</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                      </div>
                                      <div class="modal-body">
                                        <p><%= product.offer.name %></p>
                                        <p><%= product.offer.description %></p>
                                      </div>
                                      <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                  <% } else { %>
                                    <p class="price">₹<%= product.price.toFixed(2) %></p>
                                  <% } %>
                                </div>
                                  <div class="product-actions">
                                    <a href="#" class="btn btn-add-to-cart add-to-cart" data-product-id="<%= product._id %>">Add to Cart</a>
                                    <a href="/checkout/<%= product._id %>/1" class="btn btn-buy-now">Buy Now</a>
                                  </div>
                            </div>
                        </div>
                    </div>
                <% }) %>
              <div class="pagination-controls" id="pagination-controls">
                <% if (currentPage > 1) { %>
                  <a href="?page=<%= currentPage - 1 %>" class="prev-page">Previous</a>
                <% } %>

                <% for (let i = 1; i <= totalPages; i++) { %>
                  <% if (i === currentPage) { %>
                    <span class="current-page"><%= i %></span>
                  <% } else { %>
                    <a href="?page=<%= i %>" class="page-link"><%= i %></a>
                  <% } %>
                <% } %>

                <% if (currentPage < totalPages) { %>
                  <a href="?page=<%= currentPage + 1 %>" class="next-page">Next</a>
                <% } %>
              </div>
            <% } else{ %>
              <h1 style="text-align: center; padding: 150px;">NO PRODUCTS AVAILABLE</h1>
            <% } %>
        </div>
    </div>
</section>
  
  

  <footer class="footer">
    <div class="container">
      <div class="row">
        <div class="col-md-4">
          <h3 class="footer-heading">About Us</h3>
          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec orci orci, porta nec magna ac, placerat vestibulum ligula. Sed posuere consectetur est at lobortis.</p>
          <a href="#" class="btn btn-outline-light">Learn More</a>
        </div>
        <div class="col-md-4">
          <h3 class="footer-heading">Information</h3>
          <ul class="list-unstyled">
            <li><a href="#">Help Center</a></li>
            <li><a href="#">Privacy Policy</a></li>
            <li><a href="#">Terms & Conditions</a></li>
            <li><a href="#">Contact Us</a></li>
          </ul>
        </div>
        <div class="col-md-4">
          <h3 class="footer-heading">Newsletter</h3>
          <p>Subscribe to our newsletter to receive updates on new products and promotions.</p>
          <form action="#" method="POST" class="d-flex">
            <input type="email" class="form-control" placeholder="Enter Email Address">
            <button type="submit" class="btn btn-primary">Subscribe</button>
          </form>
        </div>
      </div>
      <div class="row mt-5">
        <div class="col">
          <p class="text-center text-muted">© 2024 Brand Name. All Rights Reserved.</p>
        </div>
        <div class="col d-flex justify-content-end">
          <a href="#" class="social-link"><i class="fab fa-facebook"></i>fb</a>
          <a href="#" class="social-link"><i class="fab fa-twitter"></i>tw</a>
          <a href="#" class="social-link"><i class="fab fa-instagram"></i>in</a>
        </div>
      </div>
    </div>
  </footer>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    (function () {
        window.onpageshow = function (event) {
          if (event.persisted || (window.performance && window.performance.navigation.type === 2)) {
            window.location.reload();
          }
        };
      })();
  </script>
  <script>
      const addToCartButtons = document.querySelectorAll('.add-to-cart');
    
      addToCartButtons.forEach(button => {
        button.addEventListener('click', (event) => {
          event.preventDefault();
          const item = event.target.closest('.product-card');
          if (item.classList.contains('out-of-stock')) {
            Swal.fire('Out of Stock', 'This product is currently out of stock.', 'warning');
            return;
          }
          const quantity = 1;
          const productId = button.dataset.productId;
          const productName = button.closest('.product-card').querySelector('.product-name').textContent;
    
          fetch('/add-to-cart', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              productId,
              quantity,
            })
          })
          .then(response => {
            if (!response.ok) {
              return response.json().then(data => {
                if (data.error === 'Not enough stock available') {
                  Swal.fire('Oops!', `Only ${data.availableStock} items are available in stock for this product.`, 'warning');
                } else {
                  throw new Error('Network response was not ok');
                }
              });
            }
            return response.json();
          })
          .then(data => {
            if (data) {
              Swal.fire('Success!', `${quantity} x ${productName} added to cart!`, 'success');
            } else {
              console.error('Error adding product to cart:', data.error);
            }
          })
          .catch(error => {
            console.error('Error adding product to cart:', error);
          });
        });
      });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.move-to-wishlist').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const item = e.target.closest('.product-card');
            const productId = item.getAttribute('data-product');
            console.log(item+"toggle lost")
            
            fetch('/toggle-wishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                       const icon = item.querySelector('.fa-heart');
                            if (data.isInWishlist) {
                                icon.style.color = 'black';
                            } else {
                              icon.style.color = 'rgb(221, 218, 218)';
                        }
                } else {
                  console.log(data.success+"aano")
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message,
                        confirmButtonText: 'OK'
                    });
                }
            });
        });
    });
});
  </script>
  <script>
    function setCategory(category) {
      document.getElementById('selectedCategory').value = category;
      document.getElementById('categoryDropdown').querySelector('.dropdown-toggle-text').textContent = category.charAt(0).toUpperCase() + category.slice(1);
    }
  </script>
   <script>
   const productDataDiv = document.getElementById('productData');
   const productDataString = productDataDiv.dataset.products;
   const wishlistDataDiv = document.getElementById('wishlistData');
   const productData = JSON.parse(productDataString);
   const wishlistProductsString = wishlistDataDiv.dataset.wishlistProducts;
   const wishlistProducts = JSON.parse(wishlistProductsString);
   const currentPage =  JSON.parse(productDataDiv.dataset.currentPage);
   const productsPerPage = JSON.parse(productDataDiv.dataset.productsPerPage);
   const totalProducts = JSON.parse(productDataDiv.dataset.totalProducts);

   
   
   function sortByPrice(order) {
      return productData.sort((a, b) => {
        if (order === 'asc') {
          return a.price - b.price;
        } else {
          return b.price - a.price;
        }
      });
   }

function sortByName(order) {
  return productData.sort((a, b) => {
    const nameA = a.name.toLowerCase();
    const nameB = b.name.toLowerCase();
    if (order === 'asc') {
      if (nameA < nameB) return -1;
      if (nameA > nameB) return 1;
      return 0;
    } else {
      if (nameA > nameB) return -1;
      if (nameA < nameB) return 1;
      return 0;
    }
  });
}

function sortByRating(order) {
  return productData.sort((a, b) => {
    if (a.averageRating === b.averageRating) {
      const nameA = a.name.toLowerCase();
      const nameB = b.name.toLowerCase();
      if (nameA < nameB) return -1;
      if (nameA > nameB) return 1;
      return 0;
    } else {
      if (order === 'asc') {
        return a.averageRating - b.averageRating;
      } else {
        return b.averageRating - a.averageRating;
      }
    }
  });
}
document.getElementById('sortBy').addEventListener('change', function() {
  const sortBy = this.value;
  let sortedProducts;

  switch (sortBy) {
    case 'priceLowToHigh':
      sortedProducts = sortByPrice('asc');
      break;
    case 'priceHighToLow':
      sortedProducts = sortByPrice('desc');
      break;
    case 'aToZ':
      sortedProducts = sortByName('asc');
      break;
    case 'zToA':
      sortedProducts = sortByName('desc');
      break;
    case 'ratingHighToLow':
      sortedProducts = sortByRating('desc'); 
      break;
    case 'ratingLowToHigh':
      sortedProducts = sortByRating('asc'); 
      break;
    
    default:
      sortedProducts = productData;
  }

  console.log("crntpage:",currentPage,"prodperpage:",productsPerPage,"total:",totalProducts)
  updateProductList(sortedProducts, currentPage, productsPerPage, totalProducts);
});


function updateProductList(products, currentPage, productsPerPage, totalProducts) {
  const productSection = document.querySelector('.product-section .row');
  productSection.innerHTML = '';

  if (products.length === 0) {
    productSection.innerHTML = '<h1 style="text-align: center; padding: 150px;">NO PRODUCTS AVAILABLE</h1>';
    return;
  }

  const startIndex = (currentPage - 1) * productsPerPage;
  const endIndex = startIndex + productsPerPage;
  const paginatedProducts = products.slice(startIndex, endIndex);

  paginatedProducts.forEach(product => {
    const isInWishlist = wishlistProducts.find(item => item._id === product._id);
    const wishlistIconColor = isInWishlist ? 'black' : 'rgb(221, 218, 218)';
    function generateRatingHtml(rating) {
      let ratingHtml = '';
      for (let i = 1; i <= 5; i++) {
        if (i <= rating) {
          ratingHtml += '<i class="fas fa-star"></i>';
        } else {
          ratingHtml += '<i class="far fa-star"></i>';
        }
      }
      return ratingHtml;
    }

    const productCard = `
      <div class="col-lg-3 col-md-6 col-sm-12">
        <div class="product-card" data-product="${product.id}">
          <div class="product-image">
            <a href="/product-details/${product.id}">
              <img src="/uploads/${product.photos[0].filename}" alt="Product Image">
            </a>
            <div class="product-wishlist">
              <a href="#" class="move-to-wishlist">
                <i class="fa fa-heart" style="color: ${wishlistIconColor};"></i>
              </a>
            </div>
          </div>
          <div class="product-details">
            <h3 class="product-name">${product.name}</h3>
            <div class="product-rating">
              ${generateRatingHtml(product.averageRating)}
            </div>
            <div class="product-price">₹${product.price}</div>
            <div class="product-actions">
              <a href="#" class="btn btn-add-to-cart add-to-cart" data-product-id="${product.id}">Add to Cart</a>
              <a href="/checkout?product=${product.id}" class="btn btn-buy-now">Buy Now</a>
            </div>
          </div>
        </div>
      </div>
    `;
    
    productSection.insertAdjacentHTML('beforeend', productCard);
  });
  
  // Add pagination controls
  const paginationControls = document.querySelector("pagination-controls");
  console.log(paginationControls);
  paginationControls.innerHTML = '';
  const totalPages = Math.ceil(totalProducts / productsPerPage);

  if (currentPage > 1) {
    paginationControls.innerHTML += `<a href="#" class="prev-page" data-page="${currentPage - 1}">Previous</a>`;
  }

  for (let i = 1; i <= totalPages; i++) {
    if (i === currentPage) {
      paginationControls.innerHTML += `<span class="current-page">${i}</span>`;
    } else {
      paginationControls.innerHTML += `<a href="#" class="page-link" data-page="${i}">${i}</a>`;
    }
  }

  if (currentPage < totalPages) {
    paginationControls.innerHTML += `<a href="#" class="next-page" data-page="${currentPage + 1}">Next</a>`;
  }

  productSection.insertAdjacentElement('afterend', paginationControls);

  // Add event listeners for pagination links
  document.querySelectorAll('.page-link, .prev-page, .next-page').forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();
      const page = parseInt(e.target.getAttribute('data-page'));
      console.log(page,productsPerPage,totalProducts)
      updateProductList(products, page, productsPerPage, totalProducts);
    });
  });
  const addToCartButtons = document.querySelectorAll('.add-to-cart');
    
    addToCartButtons.forEach(button => {
      button.addEventListener('click', (event) => {
        event.preventDefault();
        const quantity = 1;
        const productId = button.dataset.productId;
        console.log(productId+"addtocart")
        const productName = button.closest('.product-card').querySelector('.product-name').textContent;
  
        fetch('/add-to-cart', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            productId,
            quantity,
          })
        })
        .then(response => {
          if (!response.ok) {
            return response.json().then(data => {
              if (data.error === 'Not enough stock available') {
                Swal.fire('Oops!', `Only ${data.availableStock} items are available in stock for this product.`, 'warning');
              } else {
                throw new Error('Network response was not ok');
              }
            });
          }
          return response.json();
        })
        .then(data => {
          if (data) {
            Swal.fire('Success!', `${quantity} x ${productName} added to cart!`, 'success');
          } else {
            console.error('Error adding product to cart:', data.error);
          }
        })
        .catch(error => {
          console.error('Error adding product to cart:', error);
        });
      });
    });
  
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.move-to-wishlist').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const item = e.target.closest('.product-card');
            const productId = item.getAttribute('data-product');
            
            fetch('/toggle-wishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                       const icon = item.querySelector('.fa-heart');
                            if (data.isInWishlist) {
                                icon.style.color = 'black';
                            } else {
                              icon.style.color = 'rgb(221, 218, 218)';
                        }
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message,
                        confirmButtonText: 'OK'
                    });
                }
            });
        });
    });
});
}

  </script>
  
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>