<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>userhome</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
     <link rel="stylesheet" href="/css/productSearch.css">
  </head>
<body>
  <%- include('../includes/userHeader.ejs') %>
  <section class="product-section">
    <div class="container-fluid d-md-none mb-3">
      <div class="row">
        <div class="col-6">
          <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle w-100" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
              Filter
            </button>
            <ul class="dropdown-menu w-100" aria-labelledby="filterDropdown">
              <li>
                <h6 class="dropdown-header">Category</h6>
                <select id="categoryFilterMobile" class="form-select mb-2">
                  <option value="">All Categories</option>
                  <% categoryList.forEach(category => { %>
                    <option value="<%= category.categoryName %>"><%= category.categoryName %></option>
                  <% }) %>
                </select>
              </li>
              <li>
                <h6 class="dropdown-header">Price Range</h6>
                <input type="number" id="minPriceMobile" class="form-control mb-2" placeholder="Min Price">
                <input type="number" id="maxPriceMobile" class="form-control mb-2" placeholder="Max Price">
              </li>
              <li><hr class="dropdown-divider"></li>
              <li><button class="btn btn-primary w-100" id="applyFiltersMobile">Apply Filters</button></li>
              <li><button class="btn btn-secondary w-100 mt-2" id="clearFiltersMobile">Clear Filters</button></li>
            </ul>
          </div>
        </div>
        <div class="col-6">
          <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle w-100" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
              Sort
            </button>
            <ul class="dropdown-menu w-100" aria-labelledby="sortDropdown" id="sortOptionsMobile">
              <li><a class="dropdown-item" href="#" data-sort="popularity">Popularity</a></li>
              <li><a class="dropdown-item" href="#" data-sort="newArrivals">New Arrivals</a></li>
              <li><a class="dropdown-item" href="#" data-sort="price_Asc">Price: Low to High</a></li>
              <li><a class="dropdown-item" href="#" data-sort="price_Desc">Price: High to Low</a></li>
              <li><a class="dropdown-item" href="#" data-sort="name_Asc">Name: A to Z</a></li>
              <li><a class="dropdown-item" href="#" data-sort="name_Desc">Name: Z to A</a></li>
              <li><a class="dropdown-item" href="#" data-sort="rating_Asc">Rating: High to Low</a></li>
              <li><a class="dropdown-item" href="#" data-sort="rating_Desc">Rating: Low to High</a></li>
            </ul>
          </div>
        </div>
      </div>
    </div>
    <aside class="aside d-none d-md-block">
      <h4>Filter By</h4>
      <h5>Category</h5>
          <select id="categoryFilter" class="form-select mb-3">
            <option value="">All Categories</option>
            <% categoryList.forEach(category => { %>
              <option value="<%= category.categoryName %>">
                <%= category.categoryName %>
              </option>
            <% }) %>
          </select>

      <h5>Price Range</h5>
      <input type="number" id="minPrice" class="form-control mb-2" placeholder="Min Price">
      <input type="number" id="maxPrice" class="form-control mb-3" placeholder="Max Price">

      <!-- <h5>Brand</h5>
      <select id="brandFilter" class="form-select mb-3">
        <option value="">Select Brand</option>
        <option value="brand1">Brand 1</option>
        <option value="brand2">Brand 2</option>
        <option value="brand3">Brand 3</option>
      </select> -->

      <button class="btn apply-filter-btn" id="applyFilters">Apply Filters</button>
      <button class="btn clear-filter-btn mt-2" id="clearFilters">Clear Filters</button>
      </aside>
    <div class="container">
      <div class="row mb-3">
        <div class="col-12">
          <div class="d-flex justify-content-end align-items-center d-none d-md-block">
            <span class="me-2">Sort By:</span>
            <div id="sortOptions" class="d-flex">
              <a href="#" data-sort="popularity" class="btn btn-outline-secondary btn-sm me-1">Popularity</a>
              <a href="#" data-sort="newArrivals" class="btn btn-outline-secondary btn-sm me-1">New Arrivals</a>
              <a href="#" data-sort="price_Asc" class="btn btn-outline-secondary btn-sm me-1">Price: Low to High</a>
              <a href="#" data-sort="price_Desc" class="btn btn-outline-secondary btn-sm me-1">Price: High to Low</a>
              <a href="#" data-sort="name_Asc" class="btn btn-outline-secondary btn-sm me-1">Name: A to Z</a>
              <a href="#" data-sort="name_Desc" class="btn btn-outline-secondary btn-sm me-1">Name: Z to A</a>
              <a href="#" data-sort="rating_Asc" class="btn btn-outline-secondary btn-sm  me-1">Rating: High to Low</a>
              <a href="#" data-sort="rating_Desc" class="btn btn-outline-secondary btn-sm ">Rating: Low to High</a>
            </div>
          </div>
        </div>
      </div>
        <div class="row">
            <% if (products && products.length > 0) { %>
              <% products.forEach(product => { %>
                    <div class="col-lg-4 col-md-6 col-sm-12" style="margin-bottom: 20px;">
                        <div class="product-card <%= product.stock === 0 ? 'out-of-stock' : '' %>" data-product="<%= product._id %>">
                            <div class="product-image">
                              <a href="/product-details/<%= product._id %>">
                                <img src="/uploads/<%= product.photos[0].filename %>" alt="Product Image">
                              </a>
                              <div class="product-category">
                                <%= product.category.categoryName %>
                              </div>
                                <div class="product-wishlist">
                                  <a href="#" class="move-to-wishlist">
                                    <% const isInWishlist = wishlistProducts.find(item => item._id.toString() === product._id.toString()); %>
                                    <% if (isInWishlist) { %>
                                        <i class="fa fa-heart" style="color: black;"></i>
                                    <% } else { %>
                                        <i class="fa fa-heart" style="color:rgb(221, 218, 218);"></i>
                                    <% } %>
                                </a>
                                </div>
                                <% if (product.stock === 0) { %>
                                  <div class="out-of-stock-message">Out of Stock</div>
                                <% } %>
                            </div>
                            <div class="product-details">
                                <h3 class="product-name"><%= product.name %></h3>
                                <div class="rating">
                                  <% for (let i = 1; i <= 5; i++) { %>
                                    <% if (i <= product.averageRating) { %>
                                      <i class="fas fa-star"></i>
                                    <% } else { %>
                                      <i class="far fa-star"></i>
                                    <% } %>
                                  <% } %>
                                </div>
                                <div class="product-price">
                                  <% if (product.offer && product.price !== product.currentPrice) { %>
                                    <p class="price">
                                      <span class="price" style="text-decoration: line-through;">₹<%= product.price.toFixed(2) %></span>
                                      <span class="current-price">₹<%= product.currentPrice %></span>
                                      <i class="fas fa-info-circle offer-icon" data-bs-toggle="modal" data-bs-target="#offerModal"></i>
                                    </p>
                                     <!-- Modal -->
                                <div class="modal fade" id="offerModal" tabindex="-1" aria-labelledby="offerModalLabel" aria-hidden="true">
                                  <div class="modal-dialog">
                                    <div class="modal-content">
                                      <div class="modal-header">
                                        <h5 class="modal-title" id="offerModalLabel">Offer Details</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                      </div>
                                      <div class="modal-body">
                                        <p><%= product.offer.name %></p>
                                        <p><%= product.offer.description %></p>
                                      </div>
                                      <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                  <% } else { %>
                                    <p class="price">₹<%= product.price.toFixed(2) %></p>
                                  <% } %>
                                </div>
                                  <div class="product-actions">
                                    <a href="#" class="btn btn-add-to-cart add-to-cart" data-product-id="<%= product._id %>">Add to Cart</a>
                                    <a href="/checkout/<%= product._id %>/1" class="btn btn-buy-now">Buy Now</a>
                                  </div>
                            </div>
                        </div>
                    </div>
                <% }) %>
              
    </div>
    <div class="pagination-controls pagination" id="pagination-controls">
      <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %><%= getCurrentFilters() %>"  class="page-link text-black rounded border-0">Previous</a>
      <% } %>

      <% for (let i = 1; i <= totalPages; i++) { %>
        <% if (i === currentPage) { %>
          <span class="current-page page-link active bg-black text-white rounded border-0"><%= i %></span>
        <% } else { %>
          <a href="?page=<%= i %><%= getCurrentFilters() %>" class="page-link text-black rounded border-0"><%= i %></a>
        <% } %>
      <% } %>

      <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %><%= getCurrentFilters() %>" class="page-link text-black rounded border-0">Next</a>
      <% } %>
    </div>
  <% } else{ %>
    <h1 style="text-align: center; padding: 150px;">NO PRODUCTS AVAILABLE</h1>
  <% } %>
</section>
  
  

  <footer class="footer">
    <div class="container">
      <div class="row">
        <div class="col-md-4">
          <h3 class="footer-heading">About Us</h3>
          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec orci orci, porta nec magna ac, placerat vestibulum ligula. Sed posuere consectetur est at lobortis.</p>
          <a href="#" class="btn btn-outline-light">Learn More</a>
        </div>
        <div class="col-md-4">
          <h3 class="footer-heading">Information</h3>
          <ul class="list-unstyled">
            <li><a href="#">Help Center</a></li>
            <li><a href="#">Privacy Policy</a></li>
            <li><a href="#">Terms & Conditions</a></li>
            <li><a href="#">Contact Us</a></li>
          </ul>
        </div>
        <div class="col-md-4">
          <h3 class="footer-heading">Newsletter</h3>
          <p>Subscribe to our newsletter to receive updates on new products and promotions.</p>
          <form action="#" method="POST" class="d-flex">
            <input type="email" class="form-control" placeholder="Enter Email Address">
            <button type="submit" class="btn btn-primary">Subscribe</button>
          </form>
        </div>
      </div>
      <div class="row mt-5">
        <div class="col">
          <p class="text-center text-muted">© 2024 Brand Name. All Rights Reserved.</p>
        </div>
        <div class="col d-flex justify-content-end">
          <a href="#" class="social-link"><i class="fab fa-facebook"></i>fb</a>
          <a href="#" class="social-link"><i class="fab fa-twitter"></i>tw</a>
          <a href="#" class="social-link"><i class="fab fa-instagram"></i>in</a>
        </div>
      </div>
    </div>
  </footer>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    (function () {
        window.onpageshow = function (event) {
          if (event.persisted || (window.performance && window.performance.navigation.type === 2)) {
            window.location.reload();
          }
        };
      })();
  </script>
  <script>
      const addToCartButtons = document.querySelectorAll('.add-to-cart');
    
      addToCartButtons.forEach(button => {
        button.addEventListener('click', (event) => {
          event.preventDefault();
          const item = event.target.closest('.product-card');
          if (item.classList.contains('out-of-stock')) {
            Swal.fire('Out of Stock', 'This product is currently out of stock.', 'warning');
            return;
          }
          const quantity = 1;
          const productId = button.dataset.productId;
          const productName = button.closest('.product-card').querySelector('.product-name').textContent;
    
          fetch('/add-to-cart', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              productId,
              quantity,
            })
          })
          .then(response => {
            if (!response.ok) {
              return response.json().then(data => {
                if (data.error === 'Not enough stock available') {
                  Swal.fire('Oops!', `Only ${data.availableStock} items are available in stock for this product.`, 'warning');
                } else {
                  throw new Error('Network response was not ok');
                }
              });
            }
            return response.json();
          })
          .then(data => {
            if (data) {
              Swal.fire('Success!', `${quantity} x ${productName} added to cart!`, 'success');
            } else {
              console.error('Error adding product to cart:', data.error);
            }
          })
          .catch(error => {
            console.error('Error adding product to cart:', error);
          });
        });
      });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.move-to-wishlist').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const item = e.target.closest('.product-card');
            const productId = item.getAttribute('data-product');
            console.log(item+"toggle lost")
            
            fetch('/toggle-wishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                       const icon = item.querySelector('.fa-heart');
                            if (data.isInWishlist) {
                                icon.style.color = 'black';
                            } else {
                              icon.style.color = 'rgb(221, 218, 218)';
                        }
                } else {
                  console.log(data.success+"aano")
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message,
                        confirmButtonText: 'OK'
                    });
                }
            });
        });
    });
});
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
  const sortOptions = document.querySelectorAll('#sortOptions a, #sortOptionsMobile a');
  const minPrice = document.getElementById('minPrice');
  const maxPrice = document.getElementById('maxPrice');
  const categoryFilter = document.getElementById('categoryFilter');
  // const brandFilter = document.getElementById('brandFilter');
  const applyFiltersButton = document.getElementById('applyFilters');
  const clearFiltersButton = document.getElementById('clearFilters');

  // Mobile elements
  const minPriceMobile = document.getElementById('minPriceMobile');
  const maxPriceMobile = document.getElementById('maxPriceMobile');
  const categoryFilterMobile = document.getElementById('categoryFilterMobile');
  const applyFiltersMobileButton = document.getElementById('applyFiltersMobile');
  const clearFiltersMobileButton = document.getElementById('clearFiltersMobile');

  if (clearFiltersButton) clearFiltersButton.addEventListener('click', clearFilters);
  if (clearFiltersMobileButton) clearFiltersMobileButton.addEventListener('click', clearFilters);

  function clearFilters() {
    window.location.href = '/search';
  }

  const getUrlParams = () => new URLSearchParams(window.location.search);

  const setInputFieldsFromUrl = () => {
    const params = getUrlParams();
    const minPriceValue = params.get('minPrice') || '';
    const maxPriceValue = params.get('maxPrice') || '';
    const categoryValue = params.get('category') || '';
    // const brandValue = params.get('brand') || '';

    minPrice.value = minPriceValue;
    maxPrice.value = maxPriceValue;
    categoryFilter.value = categoryValue;
    // brandFilter.value = brandValue;

    // Set mobile inputs
    minPriceMobile.value = minPriceValue;
    maxPriceMobile.value = maxPriceValue;
    categoryFilterMobile.value = categoryValue;
  };

  const highlightActiveSortOption = () => {
    const params = getUrlParams();
    const activeSort = params.get('sortby');
    sortOptions.forEach(option => {
      option.classList.toggle('active', option.getAttribute('data-sort') === activeSort);
    });
  };

  setInputFieldsFromUrl();
  highlightActiveSortOption();

  const applyFilters = (isMobile = false) => {
    let url = new URL(window.location.href);
    let params = url.searchParams;

    const minPriceEl = isMobile ? minPriceMobile : minPrice;
    const maxPriceEl = isMobile ? maxPriceMobile : maxPrice;
    const categoryFilterEl = isMobile ? categoryFilterMobile : categoryFilter;

    if (minPriceEl.value) params.set('minPrice', minPriceEl.value);
    if (maxPriceEl.value) params.set('maxPrice', maxPriceEl.value);
    if (categoryFilterEl.value) params.set('category', categoryFilterEl.value);
    // if (!isMobile && brandFilter.value) params.set('brand', brandFilter.value);

    window.location.href = url.href;
  };

  sortOptions.forEach(option => {
    option.addEventListener('click', (e) => {
      e.preventDefault();
      let url = new URL(window.location.href);
      let params = url.searchParams;
      
      params.set('sortby', e.target.getAttribute('data-sort'));

      // Preserve existing filter parameters
      const isMobile = e.target.closest('#sortOptionsMobile') !== null;
      const minPriceEl = isMobile ? minPriceMobile : minPrice;
      const maxPriceEl = isMobile ? maxPriceMobile : maxPrice;
      const categoryFilterEl = isMobile ? categoryFilterMobile : categoryFilter;

      if (minPriceEl.value) params.set('minPrice', minPriceEl.value);
      if (maxPriceEl.value) params.set('maxPrice', maxPriceEl.value);
      if (categoryFilterEl.value) params.set('category', categoryFilterEl.value);
      // if (!isMobile && brandFilter.value) params.set('brand', brandFilter.value);

      window.location.href = url.href;
    });
  });

  if (applyFiltersButton) applyFiltersButton.addEventListener('click', () => applyFilters(false));
  if (applyFiltersMobileButton) applyFiltersMobileButton.addEventListener('click', () => applyFilters(true));
});
  </script>
  <script>
    function getCurrentFilters() {
      const urlParams = new URLSearchParams(window.location.search);
      urlParams.delete('page'); // Remove existing page parameter
      return '&' + urlParams.toString();
    }
  </script>
  

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>